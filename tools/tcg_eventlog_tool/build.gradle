import java.util.concurrent.TimeUnit

plugins {
       id "java"
       id "nebula.ospackage" version "9.1.1"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':HIRS_Utils')
    implementation libs.jcommander
    implementation libs.commons.io
}

ext.configDir = new File(projectDir, 'config')
ext.checkstyleConfigDir = "$configDir/checkstyle"
ext.findbugsConfigDir = "$configDir/findbugs"

jar {
        // Keep jar clean:
        exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'

      manifest {
         attributes(
                     'Main-Class': 'hirs.tcg_eventlog.Main',
                    'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' ')
                   )
      }
   }

// Get version from main project gradle
def packVersion = properties.get("packageVersion");
//println "packageVersion is ${projVersion}"

// Produce packages
ospackage {
    packageName = 'tcg-eventlog-tool'
    os = LINUX
    arch = NOARCH
    version = "$packVersion"
    release = '1'

    into '/opt/hirs/eventlog'
    user 'root'
    fileMode = 0755

    from(jar.outputs.files) {
        into 'lib'
    }
    from('lib') {
        into 'lib'
    }
    from(configurations.runtimeClasspath) {
        into 'lib'
    }
    from('scripts') {
        exclude {
            FileTreeElement details ->
                details.file.name.endsWith('.bat')
        }
        into 'scripts'
    }
    from('docs') {
        exclude {
            FileTreeElement details ->
                details.file.name.endsWith('.odt')
        }
        into 'docs'
    }
    from('./') {
        include {
            FileTreeElement details ->
                details.file.name.endsWith('.md')
        }
        into './'
        link("/usr/local/bin/elt", "/opt/hirs/eventlog/scripts/eventlog.sh", 0x755)
    }

    into('/tmp/') {
        fileMode 0664
        from ('../../HIRS_Utils/src/main/resources/vendor-table.json') {
            addParentDirs true
            createDirectoryEntry true
        }
    }

    postInstall file('scripts/vendor-table.sh')

    buildRpm {
        arch = X86_64
    }
    buildDeb {
        arch = 'amd64'
    }
}
